{"version":3,"sources":["components/Pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonItem.tsx","components/PeopleTable.tsx","components/Pages/PeoplePage.tsx","components/Pages/NotFoundPage.tsx","components/NavBarLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","memo","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","sex","name","PersonItem","useParams","born","died","mother","motherName","father","fatherName","PeopleTable","people","length","map","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","loadedPeople","loadPeople","preparedPeople","find","dad","mom","useEffect","NotFoundPage","NavBarLink","title","isActive","NavBar","role","App","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.685312de.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nexport const HomePage: React.FC = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport className from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = memo(({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={className(\n      { 'has-text-danger': person.sex === 'f' },\n    )}\n  >\n    {person.name}\n  </Link>\n));\n","import React, { memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport className from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonItem: React.FC<Props> = memo(({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tbody>\n      <tr\n        data-cy=\"person\"\n        className={className({\n          'has-background-warning': person.slug === slug,\n        })}\n      >\n        <td>\n          <PersonLink person={person} />\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>\n          {person.mother\n            ? <PersonLink person={person.mother} />\n            : person.motherName || '-'}\n        </td>\n        <td>\n          {person.father\n            ? <PersonLink person={person.father} />\n            : person.fatherName || '-'}\n        </td>\n      </tr>\n    </tbody>\n  );\n});\n","import React, { memo } from 'react';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = memo(({ people }) => (\n  people.length === 0\n    ? (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    )\n    : (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </table>\n    )\n));\n","import React, { memo, useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\n\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = memo(() => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadedPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadPeople = await getPeople();\n\n      const preparedPeople = loadPeople.map((person) => {\n        const father = loadPeople\n          .find((dad) => person.fatherName === dad.name);\n        const mother = loadPeople\n          .find((mom) => person.motherName === mom.name);\n\n        return {\n          ...person,\n          father,\n          mother,\n        };\n      });\n\n      setPeople(preparedPeople);\n    } catch {\n      setError(true);\n      setIsLoading(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadedPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {error ? (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      ) : (\n        <main className=\"section\">\n          <div className=\"container\">\n            <div className=\"block\">\n              <div className=\"box table-container\">\n                {isLoading ? <Loader /> : <PeopleTable people={people} />}\n              </div>\n            </div>\n          </div>\n        </main>\n      )}\n    </>\n  );\n});\n","import React, { memo } from 'react';\n\nexport const NotFoundPage: React.FC = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import React, { memo } from 'react';\nimport { NavLink, To } from 'react-router-dom';\nimport className from 'classnames';\n\ntype Props = {\n  to: To,\n  title: string,\n};\n\nexport const NavBarLink: React.FC<Props> = memo(\n  ({ to, title }) => (\n    <NavLink\n      to={to}\n      className={({ isActive }) => className(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  ),\n);\n","import React, { memo } from 'react';\nimport { NavBarLink } from './NavBarLink';\n\nexport const NavBar: React.FC = memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavBarLink to=\"/\" title=\"Home\" />\n        <NavBarLink to=\"/people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n));\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <Outlet />\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { HomePage } from './components/Pages/HomePage';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage';\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>,\n);\n"],"sourceRoot":""}